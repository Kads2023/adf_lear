{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sharegaintrial-adf"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://sharegaintrialkv.vault.azure.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sharegaintrialsql.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sharegaindb"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqlserveradmin"
		},
		"GitHub_Connect_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().base_url}"
		},
		"shargegaintrialsa_link_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://shargegaintrialsa.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4320512434270257.17.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "11.3.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"hostNameInCertificate": "",
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub_Connect')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"base_url": {
						"type": "string",
						"defaultValue": "https://github.com"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('GitHub_Connect_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_from_github')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GitHub_Connect",
					"type": "LinkedServiceReference",
					"parameters": {
						"base_url": {
							"value": "@dataset().base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"base_url": {
						"type": "string",
						"defaultValue": "https://github.com"
					},
					"relative_url": {
						"type": "string",
						"defaultValue": "cloudboxacademy/covid19/raw/main/ecdc_data/cases_deaths.csv"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().relative_url, dataset().file_name)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GitHub_Connect')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/shargegaintrialsa_link')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"secret_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('shargegaintrialsa_link_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().secret_name",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": {
							"value": "@dataset().secret_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"secret_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "input-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": " \"Average\"",
						"type": "String"
					},
					{
						"name": " \"2005\"",
						"type": "String"
					},
					{
						"name": " \"2006\"",
						"type": "String"
					},
					{
						"name": " \"2007\"",
						"type": "String"
					},
					{
						"name": " \"2008\"",
						"type": "String"
					},
					{
						"name": " \"2009\"",
						"type": "String"
					},
					{
						"name": " \"2010\"",
						"type": "String"
					},
					{
						"name": " \"2011\"",
						"type": "String"
					},
					{
						"name": " \"2012\"",
						"type": "String"
					},
					{
						"name": " \"2013\"",
						"type": "String"
					},
					{
						"name": " \"2014\"",
						"type": "String"
					},
					{
						"name": " \"2015\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": "sharegaintrialsa-accountkey"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "processed/cases_and_death",
						"fileSystem": "input-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": {
							"value": "@dataset().secret_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"secret_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "github_ecdc_file_list.json",
						"fileSystem": "input-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"secretName": {
							"type": "string"
						},
						"targetFolder": {
							"type": "string"
						},
						"sourceBaseURL": {
							"type": "string"
						},
						"filedetails": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"sourceRelativeURL": {
										"type": "string"
									},
									"FileName": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": {
							"value": "@dataset().secret_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"secret_name": {
						"type": "string"
					},
					"folder_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_path",
							"type": "Expression"
						},
						"fileSystem": "input-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cases_and_deaths_csv_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": {
							"value": "sharegaintrialsa-accountkey",
							"type": "Expression"
						}
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "raw",
						"fileSystem": "input-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/country_lookup_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": "sharegaintrialsa-accountkey"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"folderPath": "raw",
						"fileSystem": "input-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecdc_csv_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "shargegaintrialsa_link",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret_name": {
							"value": "@dataset().secret_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"secret_name": {
						"type": "string",
						"defaultValue": "sharegaintrialsa-accountkey"
					},
					"file_name": {
						"type": "string",
						"defaultValue": "cases_deaths.csv"
					},
					"folder_name": {
						"type": "string",
						"defaultValue": "input-data/raw"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/shargegaintrialsa_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cross_check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getConfigFiles",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"secret_name": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getConfigFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_details",
							"value": {
								"value": "@activity('getConfigFiles').output.firstRow.filedetails",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('file_details')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name",
										"value": {
											"value": "@item().FileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"file_details": {
						"type": "Array"
					},
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-07T14:06:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecdc_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "for_each_file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getConfigFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getConfigFiles').output.firstRow.filedetails",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_ecdc_data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Data_from_github",
											"type": "DatasetReference",
											"parameters": {
												"base_url": {
													"value": "@activity('getConfigFiles').output.firstRow.sourceBaseURL",
													"type": "Expression"
												},
												"relative_url": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().FileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ecdc_csv_dl",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@activity('getConfigFiles').output.firstRow.secretName",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().FileName",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@activity('getConfigFiles').output.firstRow.targetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "getConfigFiles",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"secret_name": {
										"value": "@pipeline().parameters.look_up_secret_name",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"look_up_secret_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-07T14:06:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/Data_from_github')]",
				"[concat(variables('factoryId'), '/datasets/ecdc_csv_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trial-copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_data_from_adls",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.in_folder_name",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.in_file_suffix",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"Average\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Average",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2005\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2005",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2006\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2006",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2007\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2007",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2008\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2008",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2009\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2009",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2010\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2010\"",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2011\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2011",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2012\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2012",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2013\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2013",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2014\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2014",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " \"2015\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " 2015",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {
									"secret_name": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"secret_name": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									},
									"folder_path": {
										"value": "@pipeline().parameters.out_folder_path",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"secret_name": {
						"type": "string",
						"defaultValue": "sharegaintrialsa-accountkey"
					},
					"in_folder_name": {
						"type": "string"
					},
					"in_file_suffix": {
						"type": "string"
					},
					"out_folder_path": {
						"type": "string"
					}
				},
				"variables": {
					"file_details": {
						"type": "Array"
					},
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-08T06:06:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cases_and_deaths_csv_dl",
								"type": "DatasetReference"
							},
							"name": "casesAndDeathSource"
						},
						{
							"dataset": {
								"referenceName": "country_lookup_csv",
								"type": "DatasetReference"
							},
							"name": "countryLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "pivot1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as short,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> casesAndDeathSource",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> countryLookup",
						"casesAndDeathSource select(mapColumn(",
						"          each(match(name=='date'),",
						"               'reported_'+'date' = $$),",
						"          each(match(true()),",
						"               'cases_'+$$ = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 select(mapColumn(",
						"          reported_date,",
						"          cases_country,",
						"          cases_country_code,",
						"          cases_population,",
						"          cases_indicator,",
						"          cases_daily_count,",
						"          cases_source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 pivot(groupBy(cases_country,",
						"          cases_country_code,",
						"          cases_population,",
						"          cases_source,",
						"          reported_date,",
						"          cases_special_country = cases_country+cases_country_code),",
						"     pivotBy(cases_indicator),",
						"     count = sum(cases_daily_count),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot1",
						"pivot1, countryLookup lookup(cases_country == country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 split(cases_country=='Africa',",
						"     disjoint: false) ~> split1@(Africa, Others)",
						"split1@Others sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cases_and_deaths_csv_dl')]",
				"[concat(variables('factoryId'), '/datasets/country_lookup_csv')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trial-data-flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"casesAndDeathSource": {},
									"countryLookup": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-08T06:09:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}